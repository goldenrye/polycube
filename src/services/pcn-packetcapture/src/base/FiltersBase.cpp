/**
* packetcapture API generated from packetcapture.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "FiltersBase.h"
#include "../Packetcapture.h"


FiltersBase::FiltersBase(Packetcapture &parent)
    : parent_(parent) {}

FiltersBase::~FiltersBase() {}

void FiltersBase::update(const FiltersJsonObject &conf) {

  if (conf.snaplenIsSet()) {
    setSnaplen(conf.getSnaplen());
  }
  if (conf.srcIsSet()) {
    setSrc(conf.getSrc());
  }
  if (conf.dstIsSet()) {
    setDst(conf.getDst());
  }
  if (conf.l4protoIsSet()) {
    setL4proto(conf.getL4proto());
  }
  if (conf.sportIsSet()) {
    setSport(conf.getSport());
  }
  if (conf.dportIsSet()) {
    setDport(conf.getDport());
  }
}

FiltersJsonObject FiltersBase::toJsonObject() {
  FiltersJsonObject conf;

  conf.setSnaplen(getSnaplen());
  conf.setSrc(getSrc());
  conf.setDst(getDst());
  conf.setL4proto(getL4proto());
  conf.setSport(getSport());
  conf.setDport(getDport());

  return conf;
}

std::shared_ptr<spdlog::logger> FiltersBase::logger() {
  return parent_.logger();
}

