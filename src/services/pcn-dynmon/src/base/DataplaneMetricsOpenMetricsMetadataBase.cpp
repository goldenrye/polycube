/**
* dynmon API generated from dynmon.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "DataplaneMetricsOpenMetricsMetadataBase.h"
#include "../Dynmon.h"


DataplaneMetricsOpenMetricsMetadataBase::DataplaneMetricsOpenMetricsMetadataBase(DataplaneMetrics &parent)
    : parent_(parent) {}

DataplaneMetricsOpenMetricsMetadataBase::~DataplaneMetricsOpenMetricsMetadataBase() {}

void DataplaneMetricsOpenMetricsMetadataBase::update(const DataplaneMetricsOpenMetricsMetadataJsonObject &conf) {

  if (conf.labelsIsSet()) {
    for (auto &i : conf.getLabels()) {
      auto name = i.getName();
      auto m = getLabels(name);
      m->update(i);
    }
  }
}

DataplaneMetricsOpenMetricsMetadataJsonObject DataplaneMetricsOpenMetricsMetadataBase::toJsonObject() {
  DataplaneMetricsOpenMetricsMetadataJsonObject conf;

  conf.setHelp(getHelp());
  conf.setType(getType());
  for(auto &i : getLabelsList()) {
    conf.addDataplaneMetricsOpenMetricsMetadataLabels(i->toJsonObject());
  }

  return conf;
}
void DataplaneMetricsOpenMetricsMetadataBase::addLabelsList(const std::vector<DataplaneMetricsOpenMetricsMetadataLabelsJsonObject> &conf) {
  for (auto &i : conf) {
    std::string name_ = i.getName();
    addLabels(name_, i);
  }
}

void DataplaneMetricsOpenMetricsMetadataBase::replaceLabels(const std::string &name, const DataplaneMetricsOpenMetricsMetadataLabelsJsonObject &conf) {
  delLabels(name);
  std::string name_ = conf.getName();
  addLabels(name_, conf);
}

void DataplaneMetricsOpenMetricsMetadataBase::delLabelsList() {
  auto elements = getLabelsList();
  for (auto &i : elements) {
    std::string name_ = i->getName();
    delLabels(name_);
  }
}

std::shared_ptr<spdlog::logger> DataplaneMetricsOpenMetricsMetadataBase::logger() {
  return parent_.logger();
}

