/**
* dynmon API generated from dynmon.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DynmonApiImpl.h
*
*
*/

#pragma once


#include <memory>
#include <map>
#include <mutex>
#include "../Dynmon.h"

#include "DataplaneJsonObject.h"
#include "DataplaneMetricsJsonObject.h"
#include "DataplaneMetricsOpenMetricsMetadataJsonObject.h"
#include "DataplaneMetricsOpenMetricsMetadataLabelsJsonObject.h"
#include "DynmonJsonObject.h"
#include "MetricsJsonObject.h"
#include <vector>

namespace polycube {
namespace service {
namespace api {

using namespace polycube::service::model;

namespace DynmonApiImpl {
  void create_dynmon_by_id(const std::string &name, const DynmonJsonObject &value);
  void create_dynmon_dataplane_by_id(const std::string &name, const DataplaneJsonObject &value);
  void delete_dynmon_by_id(const std::string &name);
  void delete_dynmon_dataplane_by_id(const std::string &name);
  DynmonJsonObject read_dynmon_by_id(const std::string &name);
  DataplaneJsonObject read_dynmon_dataplane_by_id(const std::string &name);
  std::string read_dynmon_dataplane_code_by_id(const std::string &name);
  DataplaneMetricsJsonObject read_dynmon_dataplane_metrics_by_id(const std::string &name, const std::string &metricsName);
  std::vector<DataplaneMetricsJsonObject> read_dynmon_dataplane_metrics_list_by_id(const std::string &name);
  std::string read_dynmon_dataplane_metrics_map_name_by_id(const std::string &name, const std::string &metricsName);
  DataplaneMetricsOpenMetricsMetadataJsonObject read_dynmon_dataplane_metrics_open_metrics_metadata_by_id(const std::string &name, const std::string &metricsName);
  std::string read_dynmon_dataplane_metrics_open_metrics_metadata_help_by_id(const std::string &name, const std::string &metricsName);
  DataplaneMetricsOpenMetricsMetadataLabelsJsonObject read_dynmon_dataplane_metrics_open_metrics_metadata_labels_by_id(const std::string &name, const std::string &metricsName, const std::string &labelsName);
  std::vector<DataplaneMetricsOpenMetricsMetadataLabelsJsonObject> read_dynmon_dataplane_metrics_open_metrics_metadata_labels_list_by_id(const std::string &name, const std::string &metricsName);
  std::string read_dynmon_dataplane_metrics_open_metrics_metadata_labels_value_by_id(const std::string &name, const std::string &metricsName, const std::string &labelsName);
  DataplaneMetricsOpenMetricsMetadataTypeEnum read_dynmon_dataplane_metrics_open_metrics_metadata_type_by_id(const std::string &name, const std::string &metricsName);
  std::string read_dynmon_dataplane_name_by_id(const std::string &name);
  std::vector<DynmonJsonObject> read_dynmon_list_by_id();
  MetricsJsonObject read_dynmon_metrics_by_id(const std::string &name, const std::string &metricsName);
  std::vector<MetricsJsonObject> read_dynmon_metrics_list_by_id(const std::string &name);
  int64_t read_dynmon_metrics_timestamp_by_id(const std::string &name, const std::string &metricsName);
  std::string read_dynmon_metrics_value_by_id(const std::string &name, const std::string &metricsName);
  std::string read_dynmon_open_metrics_by_id(const std::string &name);
  void replace_dynmon_by_id(const std::string &name, const DynmonJsonObject &value);
  void replace_dynmon_dataplane_by_id(const std::string &name, const DataplaneJsonObject &value);
  void update_dynmon_by_id(const std::string &name, const DynmonJsonObject &value);
  void update_dynmon_dataplane_by_id(const std::string &name, const DataplaneJsonObject &value);
  void update_dynmon_list_by_id(const std::vector<DynmonJsonObject> &value);

  /* help related */
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_dynmon_dataplane_metrics_list_by_id_get_list(const std::string &name);
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_dynmon_dataplane_metrics_open_metrics_metadata_labels_list_by_id_get_list(const std::string &name, const std::string &metricsName);
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_dynmon_list_by_id_get_list();
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_dynmon_metrics_list_by_id_get_list(const std::string &name);

}
}
}
}

