/**
* slb API generated from slb.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "Slb.h"
#include "Slb_dp.h"

Slb::Slb(const std::string name, const SlbJsonObject &conf)
  : TransparentCube(conf.getBase(), { slb_code }, {}),
    SlbBase(name) {
  logger()->info("Creating Slb instance");
  if (conf.channelLocIsSet()) {
    setChannelLoc(conf.getChannelLoc());
  }
  if (conf.channelLenIsSet()) {
    setChannelLen(conf.getChannelLen());
  }

    setIngressAction(conf.getIngressAction());
    setEgressAction(conf.getEgressAction());
}


Slb::~Slb() {
  logger()->info("Destroying Slb instance");
}

void Slb::packet_in(polycube::service::Sense sense,
    polycube::service::PacketInMetadata &md,
    const std::vector<uint8_t> &packet) {
    logger()->debug("Packet received");
}

SlbChannelLocEnum Slb::getChannelLoc() {
    return ch_loc;
}

void Slb::setChannelLoc(const SlbChannelLocEnum &value) {
    ch_loc = value;
}

uint8_t Slb::getChannelLen() {
    return ch_len;
}

void Slb::setChannelLen(const uint8_t &value) {
    ch_len = value;
}

SlbIngressActionEnum Slb::getIngressAction() {
    return i_act;
}

void Slb::setIngressAction(const SlbIngressActionEnum &value) {
    i_act = value;
}

SlbEgressActionEnum Slb::getEgressAction() {
    return e_act;
}

void Slb::setEgressAction(const SlbEgressActionEnum &value) {
    e_act = value;
}


