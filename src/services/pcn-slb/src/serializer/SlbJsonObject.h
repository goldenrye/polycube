/**
* slb API generated from slb.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* SlbJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include "polycube/services/cube.h"

namespace polycube {
namespace service {
namespace model {

enum class SlbChannelLocEnum {
  MSB, LSB
};

/// <summary>
///
/// </summary>
class  SlbJsonObject : public JsonObjectBase {
public:
  SlbJsonObject();
  SlbJsonObject(const nlohmann::json &json);
  ~SlbJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Name of the slb service
  /// </summary>
  std::string getName() const;
  void setName(std::string value);
  bool nameIsSet() const;

  /// <summary>
  /// where the channel info located? Default is LSB.
  /// </summary>
  SlbChannelLocEnum getChannelLoc() const;
  void setChannelLoc(SlbChannelLocEnum value);
  bool channelLocIsSet() const;
  void unsetChannelLoc();
  static std::string SlbChannelLocEnum_to_string(const SlbChannelLocEnum &value);
  static SlbChannelLocEnum string_to_SlbChannelLocEnum(const std::string &str);

  /// <summary>
  /// number of bits used for channel
  /// </summary>
  uint8_t getChannelLen() const;
  void setChannelLen(uint8_t value);
  bool channelLenIsSet() const;
  void unsetChannelLen();

private:
  std::string m_name;
  bool m_nameIsSet;
  SlbChannelLocEnum m_channelLoc;
  bool m_channelLocIsSet;
  uint8_t m_channelLen;
  bool m_channelLenIsSet;
};

}
}
}

